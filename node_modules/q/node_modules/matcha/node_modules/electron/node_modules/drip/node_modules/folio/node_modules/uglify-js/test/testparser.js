#! /usr/bin/env node

var parseJS = require("../lib/parse-js");
var sys = require("sys");

// write debug in a very straightforward manner
var debug = function(){
        sys.log(Array.prototype.slice.call(arguments).join(', '));
};

ParserTestSuite(function(i, input, desc){
	try {
		parseJS.parse(input);
		debug("ok " + i + ": " + desc);
	} catch(e){
		debug("FAIL " + i + " " + desc + " (" + e + ")");
	}
});

function ParserTestSuite(callback){
	var inps = [
		["var abc;", "Regular variable statement w/o assignment"],
		["var abc = 5;", "Regular variable statement with assignment"],
		["/* */;", "Multiline comment"],
		['/** **/;', 'Double star multiline comment'],
		["var f = function(){;};", "Function expression in var assignment"],
		['hi; // moo\n;', 'single line comment'],
		['var varwithfunction;', 'Dont match keywords as substrings'], // difference between `var withsomevar` and `"str"` (local search and lits)
		['a + b;', 'addition'],
		["'a';", 'single string literal'],
		["'a\\n';", 'single string literal with escaped return'],
		['"a";', 'double string literal'],
		['"a\\n";', 'double string literal with escaped return'],
		['"var";', 'string is a keyword'],
		['"variable";', 'string starts with a keyword'],
		['"somevariable";', 'string contains a keyword'],
		['"somevar";', 'string ends with a keyword'],
		['500;', 'int literal'],
		['500.;', 'float literal w/o decimals'],
		['500.432;', 'float literal with decimals'],
		['.432432;', 'float literal w/o int'],
		['(a,b,c);', 'parens and comma'],
		[